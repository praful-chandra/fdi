{"version":3,"sources":["sass/modules/auth/register.module.scss","pages/auth/RegisterComplete.jsx"],"names":["module","exports","connect","signInUser","history","useState","email","setEmail","password","setPassword","name","setName","addToast","useToasts","useEffect","window","localStorage","getItem","user","useSelector","state","token","push","console","log","auth","currentUser","handleSubmit","e","a","preventDefault","signInWithEmailLink","location","href","emailVerified","removeItem","updatePassword","updateProfile","displayName","getIdTokenResult","createOrUpdateUser","mongoResult","userObj","data","roleBasedRedirect","message","appearance","autoDismiss","className","styles","wrapper","onSubmit","form","type","placeholder","required","value","disabled","onChange","target","autoFocus","formButton"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,uBAAuB,WAAa,+B,oJC+FlFC,sBAAQ,KAAK,CAACC,gBAAdD,EApFf,YAAmD,IAAvBE,EAAsB,EAAtBA,QAAQD,EAAc,EAAdA,WAAc,EACtBE,mBAAS,IADa,mBACzCC,EADyC,KAClCC,EADkC,OAEhBF,mBAAS,IAFO,mBAEzCG,EAFyC,KAE/BC,EAF+B,OAGxBJ,mBAAS,IAHe,mBAGzCK,EAHyC,KAGnCC,EAHmC,KAIxCC,EAAaC,sBAAbD,SAERE,qBAAU,WACRP,EAASQ,OAAOC,aAAaC,QAAQ,2BACpC,IACH,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,KAAOF,KAC3CJ,qBAAU,WACJI,EAAKG,OACPjB,EAAQkB,KAAK,KAEfC,QAAQC,IAAIC,IAAKC,eAChB,CAACR,IACJ,IAAMS,EAAY,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACnBD,EAAEE,iBADiB,kBAIIL,IAAKM,oBACxBzB,EACAS,OAAOiB,SAASC,MAND,kBAQNf,KAAKgB,cARC,wBASfnB,OAAOC,aAAamB,WAAW,wBAC3BjB,EAAOO,IAAKC,YAVD,UAWTR,EAAKkB,eAAe5B,GAXX,yBAYTU,EAAKmB,cAAc,CAAEC,YAAa5B,IAZzB,yBAcKQ,EAAKqB,mBAdV,eAcTlB,EAdS,iBAgBWmB,YAAmBnB,EAAMA,OAhBpC,QAgBToB,EAhBS,OAiBTC,EAAU,CACdrB,MAAOA,EAAMA,MACbH,KAAMuB,EAAYE,MAGpBxC,EAAWuC,GACXE,YAAkBH,EAAYE,KAAKvC,GAvBpB,0DA4BjBQ,EAAS,KAAIiC,QAAS,CAAEC,WAAY,QAASC,aAAa,IA5BzC,0DAAH,sDA+BlB,OACE,qBAAKC,UAAWC,IAAOC,QAAvB,SACE,sBAAMC,SAAUxB,EAAhB,SACE,sBAAKqB,UAAWC,IAAOG,KAAvB,UACE,0CACA,uBACEC,KAAK,QACLL,UAAU,eACVM,YAAY,SACZC,UAAQ,EACRC,MAAOlD,EACPmD,UAAQ,IAEV,uBACEJ,KAAK,OACLL,UAAU,eACVM,YAAY,OACZC,UAAQ,EACRC,MAAO9C,EACPgD,SAAU,SAAC9B,GAAD,OAAOjB,EAAQiB,EAAE+B,OAAOH,UAEpC,uBACEH,KAAK,WACLL,UAAU,eACVY,WAAS,EACTN,YAAY,WACZC,UAAQ,EACRC,MAAOhD,EACPkD,SAAU,SAAC9B,GAAD,OAAOnB,EAAYmB,EAAE+B,OAAOH,UAExC,wBAAQR,UAAWC,IAAOY,WAAYR,KAAK,SAA3C","file":"static/js/32.bcfdc3a2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"register_wrapper__vqxz4\",\"form\":\"register_form__nM-1g\",\"formButton\":\"register_formButton__3M6PN\"};","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector,connect } from \"react-redux\";\r\n\r\nimport { auth } from \"../../firebase\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\nimport styles from \"../../sass/modules/auth/register.module.scss\";\r\n\r\nimport { createOrUpdateUser,roleBasedRedirect } from \"../../functions/auth.function\";\r\nimport {signInUser} from \"../../redux/actions/userActions\";\r\n\r\n/* eslint-disable react/prop-types */\r\nfunction RegisterComplete({ history,signInUser }) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const { addToast } = useToasts();\r\n\r\n  useEffect(() => {\r\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\r\n  }, []);\r\n  const user = useSelector((state) => state).user;\r\n  useEffect(() => {\r\n    if (user.token) {\r\n      history.push(\"/\");\r\n    }\r\n    console.log(auth.currentUser);\r\n  }, [user]);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const result = await auth.signInWithEmailLink(\r\n        email,\r\n        window.location.href\r\n      );\r\n      if (result.user.emailVerified) {\r\n        window.localStorage.removeItem(\"emailForRegistration\");\r\n        let user = auth.currentUser;\r\n        await user.updatePassword(password);\r\n        await user.updateProfile({ displayName: name });\r\n        \r\n        const token = await user.getIdTokenResult();\r\n      \r\n        const mongoResult = await createOrUpdateUser(token.token);\r\n        const userObj = {\r\n          token: token.token,\r\n          user: mongoResult.data,\r\n        };\r\n  \r\n        signInUser(userObj);\r\n        roleBasedRedirect(mongoResult.data,history);\r\n\r\n\r\n      }\r\n    } catch (err) {\r\n      addToast(err.message, { appearance: \"error\", autoDismiss: true });\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={styles.form}>\r\n          <h1>Register</h1>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"E-mail\"\r\n            required\r\n            value={email}\r\n            disabled\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"name\"\r\n            required\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            autoFocus\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <button className={styles.formButton} type=\"submit\">Complete registration</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default connect(null,{signInUser})(RegisterComplete);\r\n"],"sourceRoot":""}