{"version":3,"sources":["../node_modules/classnames/index.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/rc-util/es/warning.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@ctrl/tinycolor/dist/module/util.js","../node_modules/@ctrl/tinycolor/dist/module/conversion.js","../node_modules/@ctrl/tinycolor/dist/module/css-color-names.js","../node_modules/@ctrl/tinycolor/dist/module/format-input.js","../node_modules/@ctrl/tinycolor/dist/module/index.js","../node_modules/@ant-design/colors/dist/index.esm.js","../node_modules/insert-css/index.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread2","target","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","_slicedToArray","arr","arrayWithHoles","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","unsupportedIterableToArray","nonIterableRest","_objectWithoutProperties","excluded","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","warned","warning","valid","message","process","note","method","noteOnce","warningOnce","_typeof","constructor","_unsupportedIterableToArray","o","minLen","n","toString","slice","name","from","test","_arrayWithHoles","_nonIterableRest","TypeError","bound01","max","includes","parseFloat","isOnePointZero","isPercent","isPercentage","Math","min","parseInt","String","abs","clamp01","val","boundAlpha","a","isNaN","convertToPercentage","Number","pad2","c","rgbToHsl","r","g","b","h","s","l","d","hue2rgb","p","q","t","rgbToHsv","v","rgbToHex","allow3Char","hex","round","startsWith","charAt","convertDecimalToHex","convertHexToDecimal","parseIntFromHex","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","goldenrod","gold","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavenderblush","lavender","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","inputToRGB","color","rgb","ok","format","trim","toLowerCase","named","match","matchers","exec","rgba","hsl","hsla","hsv","hsva","hex8","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","substr","floor","f","mod","hsvToRgb","hslToRgb","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","Boolean","TinyColor","opts","_a","numberInputToObject","this","originalInput","roundA","gradientType","isValid","isDark","getBrightness","isLight","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","pow","getAlpha","setAlpha","alpha","toHsv","toHsvString","toHsl","toHslString","toHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","fmt","x","toPercentageRgbString","rnd","toName","entries","_b","formatSet","formattedString","hasAlpha","toNumber","clone","lighten","amount","brighten","darken","tint","mix","shade","desaturate","saturate","greyscale","spin","hue","rgb1","rgb2","analogous","results","slices","part","ret","complement","monochromatic","res","modification","splitcomplement","onBackground","background","fg","bg","triad","polyad","tetrad","result","increment","equals","darkColorMap","index","opacity","getHue","light","getSaturation","saturation","toFixed","getValue","generate","patterns","pColor","colorString","_hsv","_colorString","theme","map","_ref","backgroundColor","presetPrimaryColors","volcano","geekblue","presetPalettes","presetDarkPalettes","primary","containers","styleElements","insertCss","css","options","Error","styleElement","position","prepend","container","document","querySelector","containerId","createElement","setAttribute","createStyleElement","insertBefore","childNodes","appendChild","charCodeAt","styleSheet","cssText","textContent","_arrayLikeToArray","len","arr2"],"mappings":"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","file":"static/js/0.4e786de8.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/* eslint-disable no-console */\nvar warned = {};\nexport function warning(valid, message) {\n  // Support uglify\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    console.error(\"Warning: \".concat(message));\n  }\n}\nexport function note(valid, message) {\n  // Support uglify\n  if (process.env.NODE_ENV !== 'production' && !valid && console !== undefined) {\n    console.warn(\"Note: \".concat(message));\n  }\n}\nexport function resetWarned() {\n  warned = {};\n}\nexport function call(method, valid, message) {\n  if (!valid && !warned[message]) {\n    method(false, message);\n    warned[message] = true;\n  }\n}\nexport function warningOnce(valid, message) {\n  call(warning, valid, message);\n}\nexport function noteOnce(valid, message) {\n  call(note, valid, message);\n}\nexport default warningOnce;\n/* eslint-enable */","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nexport function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.includes('.') && parseFloat(n) === 1;\n}\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.includes('%');\n}\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return Number(n) * 100 + \"%\";\n    }\n    return n;\n}\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n","import { bound01, pad2 } from './util';\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nexport function rgbToRgb(r, g, b) {\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255,\n    };\n}\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nexport function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nexport function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nexport function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nexport function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n        pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nexport function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\n/** Converts a decimal to a hex value */\nexport function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n/** Converts a hex value to a decimal */\nexport function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\n/** Parse a base-16 hex value into a base-10 integer */\nexport function parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexport function numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\n","// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\n/**\n * @hidden\n */\nexport var names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    goldenrod: '#daa520',\n    gold: '#ffd700',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavenderblush: '#fff0f5',\n    lavender: '#e6e6fa',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n","import { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\nimport { names } from './css-color-names';\nimport { boundAlpha, convertToPercentage } from './util';\n/**\n * Given a string or object, convert that input to RGB\n *\n * Possible string inputs:\n * ```\n * \"red\"\n * \"#f00\" or \"f00\"\n * \"#ff0000\" or \"ff0000\"\n * \"#ff000000\" or \"ff000000\"\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n * ```\n */\nexport function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\n/**\n * Permissive string parsing.  Take in a number of formats, and output an object\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n */\nexport function stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            a: convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\n/**\n * Check to see if it looks like a CSS unit\n * (see `matchers` above for definition).\n */\nexport function isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n","import { rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv, numberInputToObject } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util';\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # appened.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # appened.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\" + r + \", \" + g + \", \" + b + \")\" : \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + this.roundA + \")\";\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return Math.round(bound01(x, 255) * 100) + \"%\"; };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%)\"\n            : \"rgba(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%, \" + this.roundA + \")\";\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    /**\n     * String representation of the color.\n     *\n     * @param format - The format to be used when displaying the string representation.\n     */\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        return new TinyColor({\n            r: bg.r + (fg.r - bg.r) * fg.a,\n            g: bg.g + (fg.g - bg.g) * fg.a,\n            b: bg.b + (fg.b - bg.b) * fg.a,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\n// kept for backwards compatability with v1\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n","import { TinyColor } from '@ctrl/tinycolor';\n\nvar hueStep = 2; // 色相阶梯\n\nvar saturationStep = 0.16; // 饱和度阶梯，浅色部分\n\nvar saturationStep2 = 0.05; // 饱和度阶梯，深色部分\n\nvar brightnessStep1 = 0.05; // 亮度阶梯，浅色部分\n\nvar brightnessStep2 = 0.15; // 亮度阶梯，深色部分\n\nvar lightColorCount = 5; // 浅色数量，主色上\n\nvar darkColorCount = 4; // 深色数量，主色下\n// 暗色主题颜色映射关系表\n\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\n\nfunction getHue(hsv, i, light) {\n  var hue; // 根据色相不同，色相转向不同\n\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n\n  return hue;\n}\n\nfunction getSaturation(hsv, i, light) {\n  // grey color don't change saturation\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n\n  var saturation;\n\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  } // 边界值修正\n\n\n  if (saturation > 1) {\n    saturation = 1;\n  } // 第一格的 s 限制在 0.06-0.1 之间\n\n\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n\n  return Number(saturation.toFixed(2));\n}\n\nfunction getValue(hsv, i, light) {\n  var value;\n\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n\n  if (value > 1) {\n    value = 1;\n  }\n\n  return Number(value.toFixed(2));\n}\n\nfunction generate(color) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var patterns = [];\n  var pColor = new TinyColor(color);\n\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = pColor.toHsv();\n    var colorString = new TinyColor({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue(hsv, i, true)\n    }).toHexString();\n    patterns.push(colorString);\n  }\n\n  patterns.push(pColor.toHexString());\n\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = pColor.toHsv();\n\n    var _colorString = new TinyColor({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue(_hsv, _i)\n    }).toHexString();\n\n    patterns.push(_colorString);\n  } // dark theme patterns\n\n\n  if (opts.theme === 'dark') {\n    return darkColorMap.map(function (_ref) {\n      var index = _ref.index,\n          opacity = _ref.opacity;\n      var darkColorString = new TinyColor(opts.backgroundColor || '#141414').mix(patterns[index], opacity * 100).toHexString();\n      return darkColorString;\n    });\n  }\n\n  return patterns;\n}\n\nvar presetPrimaryColors = {\n  red: '#F5222D',\n  volcano: '#FA541C',\n  orange: '#FA8C16',\n  gold: '#FAAD14',\n  yellow: '#FADB14',\n  lime: '#A0D911',\n  green: '#52C41A',\n  cyan: '#13C2C2',\n  blue: '#1890FF',\n  geekblue: '#2F54EB',\n  purple: '#722ED1',\n  magenta: '#EB2F96',\n  grey: '#666666'\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function (key) {\n  presetPalettes[key] = generate(presetPrimaryColors[key]);\n  presetPalettes[key].primary = presetPalettes[key][5]; // dark presetPalettes\n\n  presetDarkPalettes[key] = generate(presetPrimaryColors[key], {\n    theme: 'dark',\n    backgroundColor: '#141414'\n  });\n  presetDarkPalettes[key].primary = presetDarkPalettes[key][5];\n});\nvar red = presetPalettes.red;\nvar volcano = presetPalettes.volcano;\nvar gold = presetPalettes.gold;\nvar orange = presetPalettes.orange;\nvar yellow = presetPalettes.yellow;\nvar lime = presetPalettes.lime;\nvar green = presetPalettes.green;\nvar cyan = presetPalettes.cyan;\nvar blue = presetPalettes.blue;\nvar geekblue = presetPalettes.geekblue;\nvar purple = presetPalettes.purple;\nvar magenta = presetPalettes.magenta;\nvar grey = presetPalettes.grey;\n\nexport { blue, cyan, geekblue, generate, gold, green, grey, lime, magenta, orange, presetDarkPalettes, presetPalettes, presetPrimaryColors, purple, red, volcano, yellow };\n","var containers = []; // will store container HTMLElement references\nvar styleElements = []; // will store {prepend: HTMLElement, append: HTMLElement}\n\nvar usage = 'insert-css: You need to provide a CSS string. Usage: insertCss(cssString[, options]).';\n\nfunction insertCss(css, options) {\n    options = options || {};\n\n    if (css === undefined) {\n        throw new Error(usage);\n    }\n\n    var position = options.prepend === true ? 'prepend' : 'append';\n    var container = options.container !== undefined ? options.container : document.querySelector('head');\n    var containerId = containers.indexOf(container);\n\n    // first time we see this container, create the necessary entries\n    if (containerId === -1) {\n        containerId = containers.push(container) - 1;\n        styleElements[containerId] = {};\n    }\n\n    // try to get the correponding container + position styleElement, create it otherwise\n    var styleElement;\n\n    if (styleElements[containerId] !== undefined && styleElements[containerId][position] !== undefined) {\n        styleElement = styleElements[containerId][position];\n    } else {\n        styleElement = styleElements[containerId][position] = createStyleElement();\n\n        if (position === 'prepend') {\n            container.insertBefore(styleElement, container.childNodes[0]);\n        } else {\n            container.appendChild(styleElement);\n        }\n    }\n\n    // strip potential UTF-8 BOM if css was read from a file\n    if (css.charCodeAt(0) === 0xFEFF) { css = css.substr(1, css.length); }\n\n    // actually add the stylesheet\n    if (styleElement.styleSheet) {\n        styleElement.styleSheet.cssText += css\n    } else {\n        styleElement.textContent += css;\n    }\n\n    return styleElement;\n};\n\nfunction createStyleElement() {\n    var styleElement = document.createElement('style');\n    styleElement.setAttribute('type', 'text/css');\n    return styleElement;\n}\n\nmodule.exports = insertCss;\nmodule.exports.insertCss = insertCss;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}"],"sourceRoot":""}